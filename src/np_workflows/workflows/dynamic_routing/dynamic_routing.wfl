---
wfl_version: 1.0

# This is the module that will be imported for this files workflow
import: np.workflows.dynamic_routing.dynamic_routing

# Define the first / entry state
entry_state: init #! init

#  Enter each phase of the workflow as a state
states:
  # 2) check components: MVR, OpenEphys, Stim, Sync, MouseDirector
  init:
    description: Experiment Initialization
    display:
      # - field: exp_logo
      #   type: image
      #   desc: logo
      - type: note
        desc: Preparing the "Dynamic Routing" experiment.  Press next to continue
        # can this be auto-advanced w/out pressing button?
    inputs:
      - state: pre_brain_surface_photo_doc

  resume:
    description: Restore last wfl
    display:
      - field: prompt # This is apparently unused
        type: branch_radio_button
        desc: Resume from previous session?
        options:
          - field: resume
            desc: Restore data
            next: restore
          - field: new
            desc: Start new workflow
            next: get_user_id
            default: True
    inputs:
      - state: restore
      - state: get_user_id

  # restore:
  #   description: empty
  #   display:
  #   inputs:
  #     - state: resume

  # 1) Get user id
  get_user_id:
    description: User ID
    display:
      - field: user_id
        type: text_entry
        desc: Enter your user ID, then click the right arrow to continue.
    inputs:
      - state: get_mouse_id

  # 3) get mouseID
  get_mouse_id:
    description: Enter Mouse ID
    display: # This sticky widget will persist through state screens.
      - field: user_id
        type: sticky_value
        desc: User ID
      - field: mouse_id
        type: text_entry
        desc: Enter mouse LabTracks ID, then click the right arrow to continue.
    inputs:
      - state: pre_brain_surface_photo_doc #load_mouse

  # 4) *stretch goal: query mTrain for mouse Regimen, set mouse stage

  # 5) Flush water lines
  flush_lines:
    description: Flush water lines
    display:
      - type: note
        desc: Flush water lines
    inputs:
      - state: check_openephys

  # configure openephys in background

  # 6) Configure Hardware Openephys: check openephys connection, reminder to check tip referencing
  check_openephys:
    description: Openephys
    display:
      - field: None
        type: check_box
        desc: Checked all probes are connected (lit up green)
      - field: None
        type: check_box
        desc: Checked all probes are set to tip referencing
    inputs:
      - state: pretest

  # 7) pretest (remove current check boxes, check laser)
  pretest:
    description: Pretest
    display:
      - type: note
        desc: Check laser #!
    inputs:
      - state: align_probes

  # 8) align probes: reminder to move probes to target coords
  align_probes:
    description: align probes
    display:
      - type: note
        desc: move probes to target coords
    inputs:
      - state: pre_brain_surface_photo_doc

  #! skip to working photo capture
  # 9) DiI application; check bumping, photodoc, confirm dye
  probe_dye_photo_doc:
    description: Probes in dye photo doc
    display:
      - field: None
        type: check_box
        desc: checked which dye to use today (DiI or DiO)
      - field: note
        desc: dip probes and capture a photo
      - field: probe_dye_image
        type: high_res_image
        desc: Take a photo
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: probe_dye_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and begin countdown timer.
            next: load_mouse # This is unused, but i guess useful for a note
    inputs:
      - state: probe_dye_photo_doc
      - state: load_mouse
  # settle timer

  # 10) Load Mouse: no pre weight
  load_mouse:
    description: Load Mouse Onto Stage
    display:
      - field: mouse_id
        type: sticky_value
        desc: Mouse ID
      - field: None
        type: check_box
        desc: Load mouse onto the stage.
      - field: None
        type: note
        desc: Clicking next will take a snapshot with MVR.  Please ensure the auxiliary camera is visible.
      - field: None
        type: note
        desc: It may take several seconds to copy the image to display.
    inputs:
      - state: pre_brain_surface_photo_doc

  # 11) pre lowering brain surface photo doc
  pre_brain_surface_photo_doc:
    description: Pre lowering brain surface photo doc
    display:
      - field: new_snapshot
        type: high_res_image
        desc: Pre-insertion photo doc
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: pre_brain_surface_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and continue.
            next: probe_insertion_instructions # This is unused, but i guess useful for a note
    inputs:
      - state: pre_brain_surface_photo_doc
      - state: probe_insertion_instructions

  # 12)
  probe_insertion_instructions:
    description: Probe insertion instructions
    display:
      - field: None
        type: note
        desc: consult probe gui for guidance Note targets missed
      - field: notes_A
        type: text_entry
        desc: notes on A
      - field: notes_B
        type: text_entry
        desc: notes on B
      - field: notes_C
        type: text_entry
        desc: notes on C
    inputs:
      - state: probe_surface_photo_doc

  # 13) probes at surface
  probe_surface_photo_doc:
    description: Probes at brain surface photo doc
    display:
      - field: probes_at_surface_image
        type: high_res_image
        desc: Pre-insertion photo doc
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: probe_surface_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and continue.
            next: probe_insertion # This is unused, but i guess useful for a note
    inputs:
      - state: probe_surface_photo_doc
      - state: probe_insertion

  # 14) probe insertion notes
  probe_insertion:
    description: Probe insertion
    display:
      - field: None
        type: note
        desc: advance probes note observations
      - field: notes_A
        type: text_entry
        desc: notes on A
      - field: notes_B
        type: text_entry
        desc: notes on B
      - field: notes_C
        type: text_entry
        desc: notes on C
      - type: note
        desc: at final depth, click arrow to start settle-timer
    inputs:
      - state: probe_inserted_photo_doc

  # 15) probes inserted photo doc
  probe_inserted_photo_doc:
    description: Probes inserted photo doc
    display:
      - field: full_insertion_image
        type: high_res_image
        desc: Insertion photo doc
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: probe_inserted_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and continue.
            next: probe_insertion # This is unused, but i guess useful for a note
    inputs:
      - state: probe_inserted_photo_doc
      - state: check_acq_drives

  # 16) Check Data Dirs: check acquisition drive space
  check_acq_drives:
    description: Checking space on acquisition drives
    display:
      - field: None
        type: note
        desc: Press the green "next" arrow when it becomes available. #! can we auto-advance or do this in the background?
    inputs:
      - state: settle_timer

  # 17) pre-stimulus timer #! minus time elapsed since probes reached final depth?
  # run settle_timer in background instead of a wait screen
  settle_timer:
    description: Pre stimulus timer
    display:
      - field: None
        type: note
        desc: Settle Timer waiting.  Press the green "next" arrow when it becomes available. #! when waiting, is it easier to spot the green arrow when it appears, or the 'new' screen? could we change the arrow to another color to indicate waiting?
    inputs:
      - state: lick_spout

  # 18) prime lick spout/move lick spout/confirm
  lick_spout:
    description: Check lick spout and confirm
    display:
      - field: None
        type: note
        desc: reminders for priming lick spout
      - field: None
        type: check_box
        desc: lick spout primed
      - field: None
        type: check_box
        desc: lick spout moves freely #! ?
      - field: notes on lick spoutm adjustments made
        type: note
        desc: Add any notes on the lick spout, including adjustments
    inputs:
      - state: start_behavior_streams

  # 19) Initiate behavior experiment (data streams but not stimulus)
  start_behavior_streams:
    description: Start behavior streams
    inputs:
      - state: run_stimulus

  # 20) Initiate stimulus
  run_stimulus:
    description: Run CAMStim Stimulus
    display:
      - type: note
        desc: Agent is currently running.  Press the green "next" arrow when it becomes available.
    inputs:
      - state: monitor_exp

  # 21) Monitor experiment (just check MVR, sync, camstim, openephys)
  monitor_exp:
    description: Monitor exp
    inputs:
      - state: exp_end_probe_inserted_photo_doc
    # show time since exp start?

  # 23) end of experiment photodoc
  exp_end_probe_inserted_photo_doc:
    description: exp end probes inserted photo doc
    display:
      - field: full_insertion_image
        type: high_res_image
        desc: Insertion photo doc
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: probe_inserted_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and continue.
            next: probe_insertion # This is unused, but i guess useful for a note
    inputs:
      - state: exp_end_probe_inserted_photo_doc
      - state: post_removal_photo_doc

  # 24) post-removal photodoc
  post_removal_photo_doc:
    description: exp end probes inserted photo doc
    display:
      - field: full_insertion_image
        type: high_res_image
        desc: Insertion photo doc
      - field: snapshot_ok # This is apparently unused
        type: branch_radio_button
        desc: Is this snapshot acceptable?
        options:
          - field: snapshot_retry
            desc: Retake snapshot.
            next: probe_inserted_photo_doc # This is unused, but i guess useful for a note
          - field: snapshot_continue
            desc: Accept snapshot and continue.
            next: probe_insertion # This is unused, but i guess useful for a note
    inputs:
      - state: post_removal_photo_doc
      - state: post_exp_animal_and_data_management

  # 26) water mouse
  post_exp_animal_and_data_management:
    description: water mouse and small data management
    inputs:
      - state: network_backup
  # the following can be done behind the scenes during mouse removal screen:
  # dedicated screens could display if an error occurs, with the chance to retry
  # 25) Move files (collect files listed below into the Sync computer neuropixels data directory)
  # 27) check files
  # 28) make manifest and platform json (note: manifest should be created after platform json is finalized)

  # 30) network backup
  # 29) *stretch goal: kick off data joint processing
  network_backup:
    description: Large data management
    inputs:
      - state: workflow_complete

  workflow_complete:
    description: Workflow Complete!
    inputs: []
