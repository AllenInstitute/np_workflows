[project]
name = "np-workflows"
version = "1.6.43"
description = "Ecephys and behavior workflows for the Mindscope Neuropixels team."
authors = [
    { name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org" },
]
readme = "README.md"
requires-python = "==3.11.*"
dependencies = [
    "np-services>=0.1.53",
    "np-session>=0.6.38",
    "np-config >=0.4.20",
    "np-probe-targets >= 0.0.11",
    "np-datajoint",
    "ipywidgets >=7",
    "pydantic >=1, < 2",
    "jupyterlab >= 3.6",
    "jupyterlab-git >= 0.41.0",
    "jupyter-scheduler >= 1.2.0",
    "ipylab >= 0.6.0",
    "np-tools>=0.1.14",
    "np-jobs>=0.0.3",
    "universal-pathlib>=0.1.0",
    "s3fs>=2023.6.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/AllenInstitute/np_workflows"
Issues = "https://github.com/AllenInstitute/np_workflows/issues"

[project.optional-dependencies]
dev = [
    "blue>=0.9.1",
    "pytest>=7.2.2",
    "mypy>=1.1.1",
    "coverage[toml]>=7.2.2",
    "pytest-cov>=4.0.0",
    "bump>=1.3.2",
    "types-backports>=0.1.3",
    "ruff>=0.0.260",
]

[tool.pdm]
plugins = [
    "pdm-bump>=0.7.3",
]

[tool.pdm.build]
includes = [
    "src/np_workflows",
]

[tool.pdm.scripts]
ruff = "ruff check src --fix-only"
black = "black src"
test = "pytest"
bumpver = "pdm bump micro"

[tool.pdm.scripts.prebuild]
composite = [
    "black",
    "ruff",
    "test",
]

[tool.pdm.scripts.build]
composite = [
    "prebuild",
    "pdm build",
]

[tool.pdm.scripts.dryrun]
composite = [
    "prebuild",
    "pdm build",
    "pdm publish --no-build --repository https://test.pypi.org/simple",
]

[tool.pdm.scripts.publish]
composite = [
    "prebuild",
    "pdm build",
    "pdm publish --no-build",
]

[tool.pdm.scripts.pub]
composite = [
    "bumpver",
    "pdm publish",
]

[tool.ruff]
ignore-init-module-imports = true
line-length = 79

[tool.coverage.paths]
source = [
    "src",
]

[tool.coverage.run]
branch = true
source = [
    "src",
]
omit = [
    "*__init__*",
]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--ignore-glob=*sandbox*,*pretest*",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
testpaths = [
    "tests",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
