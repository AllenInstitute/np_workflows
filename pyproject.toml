[project]
name = "np-workflows"
version = "1.6.19"
description = "Ecephys and behavior workflows for the Mindscope Neuropixels team."
authors = [
    {name="Ben Hardcastle", email="ben.hardcastle@alleninstitute.org"},
    ]
readme = "README.md"
requires-python = "==3.11.*"
dependencies = [
    "np-services>=0.1.53",
    "np-session>=0.6.34",
    "np-config >=0.4.20",
    "np-probe-targets >= 0.0.11",
    "np-datajoint",
    "ipywidgets >=7",
    "pydantic >=1, < 2",
    "jupyterlab >= 3.6",
    "jupyterlab-git >= 0.41.0",
    "jupyter-scheduler >= 1.2.0",
    "ipylab >= 0.6.0",
    "np-tools>=0.1.14",
    "np-jobs>=0.0.3",
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[tool.pdm.build]
includes = ["src/np_workflows"]

[project.urls]
Repository = "https://github.com/AllenInstitute/np_workflows"
Issues = "https://github.com/AllenInstitute/np_workflows/issues"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[project.optional-dependencies]
dev = [
    "blue>=0.9.1",
    "pytest>=7.2.2",
    "mypy>=1.1.1",
    "coverage[toml]>=7.2.2",
    "pdm>=2.4.9",
    "pytest-cov>=4.0.0",
    "bump>=1.3.2",
    "types-backports>=0.1.3",
    "ruff>=0.0.260",
]

[tool.pdm.scripts]
# usage: pdm run <script> [args]
ruff = "ruff check src --fix-only"
blue = "blue src"
pytest = "pytest --cov"
prebuild = {composite = ["blue", "ruff", "pytest"]}
bump = "pdm bump -p pyproject.toml" # defaults to patch; `pdm run bump -m` to bump minor
build = {composite = ["prebuild", "pdm build"]}
dry-run = {composite = ["prebuild", "pdm build", "pdm publish --no-build --repository https://test.pypi.org/simple"]}
publish = {composite = ["prebuild", "pdm build", "pdm publish --no-build"]}
pub = {composite = ["bump", "pdm publish"]}

[tool.ruff]
ignore-init-module-imports = true
line-length = 79


[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["*__init__*"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--ignore-glob=*sandbox*,*pretest*",
    # "--pdb",
    # "--pdbcls=IPython.terminal.debugger:TerminalPdb",
]

doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]

testpaths = [
    "tests",
]